# Default values for appset-env-generator-plugin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- number of replica pods to create
replicaCount: 1

image:
  # -- image repo to use for the docker container
  repository: jessebot/argocd-appset-secret-plugin
  # -- image pullPolicy for the main container
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
# -- override the autogenerated name of this helm chart release
nameOverride: ""
fullnameOverride: ""

secretVars:
  # -- name of an existing secret to use for the secret keys to provide to
  # applicationSets via the plugin generator
  existingSecret: ""
  # key in existingSecret to use as the file name for the
  # appset-env-generator-plugin container to load
  secretKey: secret_vars.yaml

token:
  # -- the name of an existing secret to use for the token that argoCD and the plugin will use for communication
  existingSecret: ""

logging:
  # -- logging level for secret-plugin docker container
  # Can be one of: debug, info, warning, error
  level: warning

# configReloader sidecar that automatically loads in changes to your Secret
configReloader:
  image:
    # -- registry and repo for the configreloader image
    # defaults to https://github.com/kiwigrid/k8s-sidecar
    repository: quay.io/kiwigrid/k8s-sidecar
    # -- tag to point at for k8s-sidecar
    tag: 1.30.10
    # -- image pullPolicy for the main container
    pullPolicy: IfNotPresent

  # -- the label to check for on the Secret (secretVars.existingSecret)
  label: "argocd-appset-secret-plugin"
  # -- the label value to check for on the Secret (secretVars.existingSecret)
  labelValue: "1"
  # -- interval to wait before retrying a check for changes (in seconds)
  interval: 10
  # -- full path on container to put secret file
  folder: "/var/run/secret-plugin"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true,
  # a name is generated using the fullname template
  name: ""

# -- any additional annotations you'd like the pod to have
podAnnotations: {}

# -- securityContext for the pod: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
  # fsGroup: 2000

# -- securityContext for the container: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- type for the service, only ClusterIP is tested
  type: ClusterIP
  # -- service port to expose on the cluster
  port: 80
  # -- service target port on the container
  targetPort: 4355

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- if you're feeling brave, why not try enabling autoscaling? untested
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# rbac rules needed to run the above configReloader
rbac:
  # -- create rbac clusterole and clusterolebinding
  create: true
  # -- use existing clusterole, but still create clusterrolebinding
  useExistingClusterRole: ""

# -- deploy chart to a specific k8s node
nodeSelector: {}

tolerations: []

affinity: {}
