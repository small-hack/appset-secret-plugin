apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argocd-appset-secret-plugin.fullname" . }}
  labels:
    {{- include "argocd-appset-secret-plugin.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "argocd-appset-secret-plugin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        k8s-sidecar-target-directory: "/var/run/secret-plugin/"
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "argocd-appset-secret-plugin.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "argocd-appset-secret-plugin.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        # reload config
        - name: config-reloader
          image: "{{ .Values.configReloader.image.repository }}:{{ .Values.configReloader.image.tag }}"
          imagePullPolicy: {{ .Values.configReloader.image.imagePullPolicy }}
          env:
            - name: LABEL
              value: "{{ .Values.configReloader.label }}"

            - name: LABEL_VALUE
              value: "{{ .Values.configReloader.labelValue }}"

            - name: FOLDER
              value: "{{ .Values.configReloader.folder }}"

            - name: SLEEP_TIME
              value: "{{ .Values.configReloader.interval }}"

            - name: RESOURCE
              value: secret

            - name: RESOURCE_NAME
              value: "{{ include "argocd-appset-secret-plugin.varSecret" . }}"

          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi

          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

          volumeMounts:
            - name: secret-volume
              mountPath: {{ .Values.configReloader.folder }}

        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP

          volumeMounts:
            # this is the token required to access the http endpoint
            - name: token
              mountPath: "/var/run/argocd/token"
              subPath: "token"
              readOnly: true

            - name: secret-volume
              mountPath: {{ .Values.configReloader.folder }}

          env:
            - name: LOG_LEVEL
              value: {{ .Values.logging.level }}

            - name: SECRET_VARS_FILE
              value: "{{ .Values.configReloader.folder }}/{{ .Values.secretVars.secretKey }}"

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      volumes:
        - name: token
          secret:
            secretName: "{{ include "argocd-appset-secret-plugin.tokenSecret" . }}"

        - name: secret-volume
          emptyDir: {}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
